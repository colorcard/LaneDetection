name: 车道线检测程序构建

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    name: 在 ${{ matrix.os }} 上构建
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            cmake_generator: "Unix Makefiles"
            artifact_path: build/lane_detection
          - os: windows-latest
            cmake_generator: "Visual Studio 17 2022"
            artifact_path: build/Release/lane_detection.exe
          - os: macos-latest
            cmake_generator: "Unix Makefiles"
            artifact_path: build/lane_detection

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 创建构建目录
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: 安装依赖 (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcurl4-openssl-dev

      - name: 下载STB头文件
        run: |
          mkdir -p stb_headers
          cd stb_headers
          curl -L -o stb_image.h https://raw.githubusercontent.com/nothings/stb/master/stb_image.h
          curl -L -o stb_image_write.h https://raw.githubusercontent.com/nothings/stb/master/stb_image_write.h
        shell: bash

      - name: 配置CMake
        working-directory: ${{github.workspace}}/build
        run: |
          cmake .. -G "${{ matrix.cmake_generator }}" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INCLUDE_PATH=${{github.workspace}}/stb_headers
        env:
          CFLAGS: "-I${{github.workspace}}/stb_headers"
          CXXFLAGS: "-I${{github.workspace}}/stb_headers"

      - name: 构建
        working-directory: ${{github.workspace}}/build
        run: cmake --build . --config Release

      - name: 列出构建目录内容 (Linux/macOS)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          find "${{github.workspace}}/build" -type f -name "lane_detection*" | sort
          ls -la "${{github.workspace}}/build"

      - name: 列出构建目录内容 (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Get-ChildItem -Path "${{github.workspace}}\build" -Recurse -Filter "lane_detection*" | Select-Object FullName
          Get-ChildItem -Path "${{github.workspace}}\build" | Format-Table
          if (Test-Path "${{github.workspace}}\build\Release") {
            Get-ChildItem -Path "${{github.workspace}}\build\Release" | Format-Table
          }

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: lane_detection-${{ matrix.os }}
          path: ${{ github.workspace }}/${{ matrix.artifact_path }}
          if-no-files-found: warn  # 改为警告而不是错误